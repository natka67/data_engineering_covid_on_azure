{
	"name": "df_transform_cases_deaths",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_nationalcasedeath_source",
						"type": "DatasetReference"
					},
					"name": "casesAndDeathScore"
				},
				{
					"dataset": {
						"referenceName": "ds_country_lookup",
						"type": "DatasetReference"
					},
					"name": "countryLookUp"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ds_nationalcasedeath_sink",
						"type": "DatasetReference"
					},
					"name": "transformedCasesDeaths",
					"rejectedDataLinkedService": {
						"referenceName": "ls_adls_coviddata",
						"type": "LinkedServiceReference"
					}
				}
			],
			"transformations": [
				{
					"name": "onlyEurope"
				},
				{
					"name": "selectImportantColumns"
				},
				{
					"name": "pivotCasesDeaths"
				},
				{
					"name": "lookUp2DigitsCountryCode"
				},
				{
					"name": "selectColumnsToSave"
				}
			],
			"scriptLines": [
				"source(output(",
				"          country as string,",
				"          country_code as string,",
				"          continent as string,",
				"          population as string,",
				"          indicator as string,",
				"          weekly_count as double,",
				"          year_week as string,",
				"          rate_14_day as string,",
				"          cumulative_count as string,",
				"          source as string,",
				"          note as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> casesAndDeathScore",
				"source(output(",
				"          country as string,",
				"          country_code_2_digit as string,",
				"          country_code_3_digit as string,",
				"          continent as string,",
				"          population as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> countryLookUp",
				"casesAndDeathScore filter(continent=='Europe' && not(isNull(country_code))) ~> onlyEurope",
				"onlyEurope select(mapColumn(",
				"          country,",
				"          country_code,",
				"          population,",
				"          indicator,",
				"          source,",
				"          weekly_count,",
				"          each(match(name=='year_week'),",
				"               'reported_week' = $$)",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectImportantColumns",
				"selectImportantColumns pivot(groupBy(country,",
				"          country_code,",
				"          population,",
				"          source,",
				"          reported_week),",
				"     pivotBy(indicator, ['cases', 'deaths']),",
				"     count = sum(weekly_count),",
				"     columnNaming: '$N_$V',",
				"     lateral: true) ~> pivotCasesDeaths",
				"pivotCasesDeaths, countryLookUp lookup(pivotCasesDeaths@country == countryLookUp@country,",
				"     multiple: false,",
				"     pickup: 'any',",
				"     broadcast: 'auto')~> lookUp2DigitsCountryCode",
				"lookUp2DigitsCountryCode select(mapColumn(",
				"          country = pivotCasesDeaths@country,",
				"          population = pivotCasesDeaths@population,",
				"          source,",
				"          reported_week,",
				"          count_cases,",
				"          count_deaths,",
				"          country_code_2_digit,",
				"          country_code_3_digit",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectColumnsToSave",
				"selectColumnsToSave sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> transformedCasesDeaths"
			]
		}
	}
}